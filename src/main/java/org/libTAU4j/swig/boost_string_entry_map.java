/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.libTAU4j.swig;

public class boost_string_entry_map {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected boost_string_entry_map(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(boost_string_entry_map obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libTAU_jni.delete_boost_string_entry_map(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public boolean empty() {
    return libTAU_jni.boost_string_entry_map_empty(swigCPtr, this);
  }

  public void clear() {
    libTAU_jni.boost_string_entry_map_clear(swigCPtr, this);
  }

  public long size() {
    return libTAU_jni.boost_string_entry_map_size(swigCPtr, this);
  }

  public boolean contains(String k) {
    return libTAU_jni.boost_string_entry_map_contains(swigCPtr, this, k);
  }

  public void put(String k, entry v) {
    libTAU_jni.boost_string_entry_map_put(swigCPtr, this, k, entry.getCPtr(v), v);
  }

  public entry get(String k) {
    return new entry(libTAU_jni.boost_string_entry_map_get(swigCPtr, this, k), false);
  }

  public string_vector keys() {
    return new string_vector(libTAU_jni.boost_string_entry_map_keys(swigCPtr, this), true);
  }

  public void remove(String key) {
    libTAU_jni.boost_string_entry_map_remove(swigCPtr, this, key);
  }

  public boost_string_entry_map() {
    this(libTAU_jni.new_boost_string_entry_map(), true);
  }

}

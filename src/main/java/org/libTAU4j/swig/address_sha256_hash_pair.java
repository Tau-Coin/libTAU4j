/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.libTAU4j.swig;

public class address_sha256_hash_pair {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected address_sha256_hash_pair(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(address_sha256_hash_pair obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libTAU_jni.delete_address_sha256_hash_pair(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public address_sha256_hash_pair() {
    this(libTAU_jni.new_address_sha256_hash_pair__SWIG_0(), true);
  }

  public address_sha256_hash_pair(address first, sha256_hash second) {
    this(libTAU_jni.new_address_sha256_hash_pair__SWIG_1(address.getCPtr(first), first, sha256_hash.getCPtr(second), second), true);
  }

  public address_sha256_hash_pair(address_sha256_hash_pair p) {
    this(libTAU_jni.new_address_sha256_hash_pair__SWIG_2(address_sha256_hash_pair.getCPtr(p), p), true);
  }

  public void setFirst(address value) {
    libTAU_jni.address_sha256_hash_pair_first_set(swigCPtr, this, address.getCPtr(value), value);
  }

  public address getFirst() {
    long cPtr = libTAU_jni.address_sha256_hash_pair_first_get(swigCPtr, this);
    return (cPtr == 0) ? null : new address(cPtr, false);
  }

  public void setSecond(sha256_hash value) {
    libTAU_jni.address_sha256_hash_pair_second_set(swigCPtr, this, sha256_hash.getCPtr(value), value);
  }

  public sha256_hash getSecond() {
    long cPtr = libTAU_jni.address_sha256_hash_pair_second_get(swigCPtr, this);
    return (cPtr == 0) ? null : new sha256_hash(cPtr, false);
  }

}
